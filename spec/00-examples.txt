// this is a comment
/* this is a line comment */

// anonymous function
line = x. 3x + 2

// binary function
line = m. x. mx + 2
// simplify
line = m x. mx + 2

// type alias of record
type Quadratic = {
    a: Double
    b: Double
    c: Double
}

// type constructor
type Pair = a. (a, a)

// naÃ¯ve quadratic formula
roots: Quadratic -> Pair Double = { a, b, c }.
    pm: typeof (+). (-b `pm` (sqrt $ bb - 4ac)) / (2a)
    | f. (f (-), f (+))

// branching quadratic formula
roots: Quadratic -> List Num = { a, b, c }.
    pm: typeof (+). (-b `pm` (sqrt $ bb - 4ac)) / (2a)
    | f. cond [
        (bb < 4ac, Nil)
        (bb == 4ac, of $ f const)
        (otherwise, [f (-), f (+)])
    ]
